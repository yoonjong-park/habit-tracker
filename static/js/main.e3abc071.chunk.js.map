{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","name","count","className","onClick","PureComponent","HabitAddForm","inputRef","React","createRef","formRef","onSubmit","event","preventDefault","current","value","onAdd","reset","ref","type","placeholder","Component","Habits","handleAdd","habits","map","id","onReset","Navbar","totalCount","App","state","item","setState","filter","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3abc071.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Habit extends PureComponent {\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit);\n  };\n\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit);\n  };\n\n  render() {\n    const { name, count } = this.props.habit;\n\n    return (\n      <li className='habit'>\n        <span className='habit-name'>{name}</span>\n        <span className='habit-count'>{count}</span>\n        <button className='habit-button habit-increase' onClick={this.handleIncrement}>\n          <i className='fas fa-plus-square'></i>\n        </button>\n        <button className='habit-button habit-decrease' onClick={this.handleDecrement}>\n          <i className='fas fa-minus-square'></i>\n        </button>\n        <button className='habit-button habit-delete' onClick={this.handleDelete}>\n          <i className='fas fa-trash'></i>\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Habit;\n","import React, { Component } from 'react';\n\nclass HabitAddForm extends Component {\n  inputRef = React.createRef(); /* React 함수로 Ref라는 object를 생성한다.*/\n  formRef = React.createRef();\n\n  onSubmit = (event) => {\n    // function onSubmit(event)  와 같은 것임.\n    event.preventDefault();\n    const name = this.inputRef.current.value;\n    name && this.props.onAdd(name);\n    // name이 false가 아닐경우(값이 있다면) onAdd에 name을 전달하는 구문\n    // this.inputRef.current.value = '';  이렇게 해도 되나, 아래와 같이 하는 게 정석이다.\n    this.formRef.current.reset();\n  };\n\n  render() {\n    return (\n      <form ref={this.formRef} className='add-form' onSubmit={this.onSubmit}>\n        <input ref={this.inputRef} type='text' className='add-input' placeholder='Habit' />\n        <button className='add-button'>Add</button>\n      </form>\n    );\n  }\n}\n\nexport default HabitAddForm;\n","import React, { Component } from 'react';\nimport Habit from './habit';\nimport HabitAddForm from './habitAddForm';\n\nclass Habits extends Component {\n  handleIncrement = (habit) => {\n    this.props.onIncrement(habit);\n  };\n\n  handleDecrement = (habit) => {\n    this.props.onDecrement(habit);\n  };\n\n  handleDelete = (habit) => {\n    this.props.onDelete(habit);\n  };\n\n  handleAdd = (name) => {\n    this.props.onAdd(name);\n  };\n\n  render() {\n    return (\n      <>\n        <HabitAddForm onAdd={this.handleAdd} />\n        <ul>\n          {this.props.habits.map((habit) => (\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={this.handleIncrement}\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n            />\n            /***  Key는 항상 제공 되어야 함. habit은 props를 의미함. {habit} 부분은habits object의 1개 배열의 아이템을 의미함.***/\n          ))}\n        </ul>\n        <button className='habits-reset' onClick={this.props.onReset}>\n          Reset All\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Habits;\n","import React, { PureComponent } from 'react';\n\nclass Navbar extends PureComponent {\n  render() {\n    return (\n      <nav className='navbar'>\n        <i className='navbar-logo fas fa-leaf'></i>\n        <span>Habit Tracker</span>\n        <span className='navbar-count'>{this.props.totalCount}</span>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n  };\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 }; /*...habit 기존 해빗과 key, value를 동일하게 새로 복사해서 새 오브젝트로 생성*/\n      } else {\n        return item;\n      }\n    });\n    this.setState({ habits }); /* key : value -> 1개로 통합 가능*/\n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count }; /*...habit 기존 해빗과 key, value를 동일하게 새로 복사해서 새 오브젝트로 생성*/\n      } else {\n        return item;\n      }\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id); /* click한 거 빼고 저장 */\n    this.setState({ habits });\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      } else {\n        return habit;\n      }\n    });\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar totalCount={this.state.habits.filter((item) => item.count > 0).length} />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}